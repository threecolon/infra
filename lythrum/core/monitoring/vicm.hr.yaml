apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vicm
  namespace: monitoring
spec:
  interval: 10m0s
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      sourceRef:
        kind: HelmRepository
        name: victoria-metrics
        namespace: flux-system
      version: "0.28.4"
  values:
    global:
      cluster:
        dnsDomain: cluster.local.
      clusterLabel: cluster
    tenant: "0"
    victoria-metrics-operator:
      crds:
        cleanup:
          enabled: true
          image:
            pullPolicy: IfNotPresent
            repository: bitnami/kubectl
        plain: true
      enabled: true
      operator:
        disable_prometheus_converter: false
      serviceMonitor:
        enabled: true
    alertmanager:
      config:
        receivers:
          - name: blackhole
        route:
          receiver: blackhole
        templates:
          - /etc/vm/configs/**/*.tmpl
      enabled: true
      monzoTemplate:
        enabled: true
      spec:
        configSecret: ""
        externalURL: ""
        image:
          tag: v0.27.0
        port: "9093"
        replicaCount: 1
        routePrefix: /
        selectAllByDefault: true
      templateFiles: {}
    coreDns:
      enabled: true
      service:
        enabled: true
        port: 9153
        selector:
          k8s-app: kube-dns
        targetPort: 9153
      vmScrape:
        spec:
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: http-metrics
          jobLabel: jobLabel
          namespaceSelector:
            matchNames:
              - kube-system
    defaultDashboards:
      enabled: true
      defaultTimezone: utc
      grafanaOperator:
        enabled: true
        spec:
          instanceSelector:
            matchLabels:
              dashboards: "grafana"
          allowCrossNamespaceImport: false
      dashboards:
        victoriametrics-vmalert:
          enabled: true
        victoriametrics-operator:
          enabled: true
        node-exporter-full:
          enabled: true
    defaultDatasources:
      alertmanager:
        datasources:
          - access: proxy
            jsonData:
              implementation: prometheus
            name: Alertmanager
        perReplica: false
      victoriametrics:
        datasources:
          - isDefault: true
            name: VictoriaMetrics
            type: prometheus
          - isDefault: false
            name: VictoriaMetrics (DS)
            type: victoriametrics-datasource
        perReplica: false
    defaultRules:
      create: true
      groups:
        etcd:
          create: true
        general:
          create: true
        k8sContainerMemoryRss:
          create: true
        k8sContainerMemoryCache:
          create: true
        k8sContainerCpuUsageSecondsTotal:
          create: true
        k8sPodOwner:
          create: true
        k8sContainerResource:
          create: true
        k8sContainerMemoryWorkingSetBytes:
          create: true
        k8sContainerMemorySwap:
          create: true
        kubeApiserver:
          create: true
        kubeApiserverAvailability:
          create: true
        kubeApiserverBurnrate:
          create: true
        kubeApiserverHistogram:
          create: true
        kubeApiserverSlos:
          create: true
        kubelet:
          create: true
        kubePrometheusGeneral:
          create: true
        kubePrometheusNodeRecording:
          create: true
        kubernetesApps:
          create: true
          targetNamespace: ".*"
        kubernetesResources:
          create: true
        kubernetesStorage:
          create: true
          targetNamespace: ".*"
        kubernetesSystem:
          create: true
        kubernetesSystemKubelet:
          create: true
        kubernetesSystemApiserver:
          create: true
        kubernetesSystemControllerManager:
          create: true
        kubeScheduler:
          create: true
        kubernetesSystemScheduler:
          create: true
        kubeStateMetrics:
          create: true
        nodeNetwork:
          create: true
        node:
          create: true
        vmagent:
          create: true
        vmsingle:
          create: true
        vmcluster:
          create: true
        vmHealth:
          create: true
        vmoperator:
          create: true
        alertmanager:
          create: true
      runbookUrl: https://runbooks.prometheus-operator.dev/runbooks
    externalVM:
      read:
        url: ""
      vmauth:
        read:
          - src_paths:
              - /select/.*
            url_prefix:
              - /
        write:
          - src_paths:
              - /insert/.*
            url_prefix:
              - /
      write:
        url: ""
    grafana:
      enabled: false
      forceDeployDatasource: true
    kube-state-metrics:
      enabled: true
      vmScrape:
        enabled: true
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: '{{ include "kube-state-metrics.name" (index .Subcharts "kube-state-metrics") }}'
              app.kubernetes.io/instance: '{{ include "vm.release" . }}'
          endpoints:
            - port: http
              honorLabels: true
              metricRelabelConfigs:
                - action: labeldrop
                  regex: (uid|container_id|image_id)
          jobLabel: app.kubernetes.io/name
    kubeApiServer:
      enabled: true
      vmScrape:
        spec:
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: https
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                serverName: kubernetes
          jobLabel: component
          namespaceSelector:
            matchNames:
              - default
          selector:
            matchLabels:
              component: apiserver
              provider: kubernetes
    kubeControllerManager:
      enabled: true
      service:
        enabled: true
        port: 10257
        targetPort: 10257
        selector:
          component: kube-controller-manager
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: true
      service:
        enabled: true
        port: 10259
        targetPort: 10259
        selector:
          component: kube-scheduler
    kubelet:
      enabled: true
      vmScrapes:
        cadvisor:
          enabled: true
          spec:
            path: /metrics/cadvisor
        probes:
          enabled: true
          spec:
            path: /metrics/probes
    prometheus-node-exporter:
      enabled: true
      service:
        #
        labels:
          jobLabel: node-exporter
      extraArgs:
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
      vmScrape:
        enabled: true
        spec:
          jobLabel: jobLabel
          selector:
            matchLabels:
              app.kubernetes.io/name: '{{ include "prometheus-node-exporter.name" (index .Subcharts "prometheus-node-exporter") }}'
          endpoints:
            - port: metrics
              metricRelabelConfigs:
                - action: drop
                  source_labels: [mountpoint]
                  regex: "/var/lib/kubelet/pods.+"
    vmagent:
      enabled: true
      ingress:
        enabled: false
      spec:
        extraArgs:
          promscrape.dropOriginalLabels: "true"
          promscrape.streamParse: "true"
        port: "8429"
        scrapeInterval: 20s
        selectAllByDefault: true
    vmalert:
      enabled: true
      remoteWriteVMAgent: false
      spec:
        port: "8080"
        selectAllByDefault: true
        evaluationInterval: 15s
        extraArgs:
          http.pathPrefix: "/"
    vmauth:
      enabled: false
    vmcluster:
      enabled: false
    vmsingle:
      enabled: true
      spec:
        port: "8429"
        retentionPeriod: "1"
        replicaCount: 1
        storage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
          storageClassName: ceph-block-nvmez
      ingress:
        enabled: false
    additionalVictoriaMetricsMap: null
