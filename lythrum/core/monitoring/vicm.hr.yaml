apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vicm
  namespace: monitoring
spec:
  interval: 10m0s
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      sourceRef:
        kind: HelmRepository
        name: victoria-metrics
        namespace: flux-system
      version: "0.29.1"
  values:
    global:
      cluster:
        dnsDomain: cluster.local.
      clusterLabel: cluster
    tenant: "0"
    victoria-metrics-operator:
      crds:
        cleanup:
          enabled: true
          image:
            pullPolicy: IfNotPresent
            repository: bitnami/kubectl
        plain: true
      enabled: true
      operator:
        disable_prometheus_converter: false
      serviceMonitor:
        enabled: true
    alertmanager:
      enabled: true
      config:
        receivers:
          - name: blackhole
        route:
          receiver: blackhole
        templates:
          - /etc/vm/configs/**/*.tmpl
    coreDns:
      enabled: true
    defaultDashboards:
      enabled: true
      defaultTimezone: utc
      grafanaOperator:
        enabled: true
        spec:
          instanceSelector:
            matchLabels:
              dashboards: "grafana"
          allowCrossNamespaceImport: false
      dashboards:
        victoriametrics-vmalert:
          enabled: true
        victoriametrics-operator:
          enabled: true
        node-exporter-full:
          enabled: true
    defaultDatasources:
      alertmanager:
        datasources:
          - access: proxy
            jsonData:
              implementation: prometheus
            name: Alertmanager
        perReplica: false
      victoriametrics:
        datasources:
          - isDefault: true
            name: VictoriaMetrics
            type: prometheus
          - isDefault: false
            name: VictoriaMetrics (DS)
            type: victoriametrics-datasource
        perReplica: false
    grafana:
      enabled: false
      forceDeployDatasource: true
      sidecar:
        datasources:
          enabled: false
          initDatasources: false
          annotations: {}
          labels: {}
        dashboards:
          provider:
            name: default
            orgid: 1
          folder: /var/lib/grafana/dashboards
          defaultFolderName: default
          enabled: true
          multicluster: false
    kube-state-metrics:
      enabled: true
      vmScrape:
        enabled: true
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: '{{ include "kube-state-metrics.name" (index .Subcharts "kube-state-metrics") }}'
              app.kubernetes.io/instance: '{{ include "vm.release" . }}'
          endpoints:
            - port: http
              honorLabels: true
              metricRelabelConfigs:
                - action: labeldrop
                  regex: (uid|container_id|image_id)
          jobLabel: app.kubernetes.io/name
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: true
    kubelet:
      enabled: true
    prometheus-node-exporter:
      enabled: true
      service:
        labels:
          jobLabel: node-exporter
      extraArgs:
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    vmagent:
      enabled: true
      ingress:
        enabled: false
      spec:
        extraArgs:
          promscrape.dropOriginalLabels: "true"
          promscrape.streamParse: "true"
        port: "8429"
        scrapeInterval: 20s
        selectAllByDefault: true
    vmalert:
      enabled: true
      remoteWriteVMAgent: false
      spec:
        port: "8080"
        selectAllByDefault: true
        evaluationInterval: 15s
        extraArgs:
          http.pathPrefix: "/"
    vmauth:
      enabled: false
    vmcluster:
      enabled: false
    vmsingle:
      enabled: true
      spec:
        port: "8429"
        retentionPeriod: "1"
        replicaCount: 1
        storage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 32Gi
          storageClassName: ceph-block-akane-nvme
      ingress:
        enabled: false
    additionalVictoriaMetricsMap: null
